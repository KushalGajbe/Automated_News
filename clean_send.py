import requests
from bs4 import BeautifulSoup
from pymongo import MongoClient
from datetime import datetime, timedelta, timezone
import pytz
import nltk
from nltk.tokenize import sent_tokenize
import feedparser
import re
import time
import json
from nltk.corpus import stopwords
import langchain
from langchain_community.llms import Ollama
from langchain_community.tools import DuckDuckGoSearchRun


# # Getting the current date and time in IST
now_ist = datetime.now(pytz.timezone('Asia/Kolkata'))

# Function to query the model
def query_model(prompt):
    start= time.time()
    print('Querying the model...')
    response = ollama(prompt)
    end = time.time()
    print('Completed querying the model')
    print(f'Time taken: {end - start:.2f} seconds')
    return response

# Initialize the Ollama instance
ollama = Ollama(base_url='http://localhost:11434', model='llama3')


# Get the final_output.txt
with open('final_output.txt', 'r') as file:
    final_output = file.read()

# remove the first line of final_output
final_output_lines = final_output.split('\n')
final_output = '\n'.join(final_output_lines[2:])

# Get the prompt
prompt = """
I want you to remove lines such as, "Note: I only extracted information related to the stock market, financial markets (including gold), and did not provide any personal suggestions.", "No news mentioned about currency(or anything)", "No information was found on nifty50 levels", etc. Input is a market summary which was generated by you itself. In the output, please you also don't mention anything like, "I have removed all the unnecessary lines etc, etc". Just give me the main content and nothing else from your side.
"""

# Query the model
response = query_model(prompt + final_output)

# # remove the first line of response
# response_lines = response.split('\n')
# response = '\n'.join(response_lines[2:])

# remove the ** from the response
response = response.replace("**", "")

#Save the response to a file
with open('clean_output.txt', 'w') as file:
    file.write(response)

# read clean_output
with open("clean_output.txt", "r") as file:
    response= file.read()


# Get the current time in ISO 8601 format with UTC
current_time = datetime.now(timezone.utc).isoformat()

# if time is before 11 AM, then it is pre-market summary, thus set title to "Pre-Market Summary", else set it to "Post-Market Summary"
if now_ist.hour<11:
    title = "Pre-Market Summary"
else:
    title = "Post-Market Summary"



# Your article data
data = {
    "title":title,
    "shortDescription": "",
    "article": response,
    "publishedAt": current_time,
    "heroImage" : [
            {
                "name" : "DALLÂ·E 2024-05-07 08.49.31 - A financial news themed image featuring a calm and peaceful scene to represent a quiet beginning in the stock market, illustrated with a depiction of .webp",
                "sizeInBytes" : 313560,
                "privateUrl" : "tenant/64ba5a259aac676b1e5d0810/news/heroImage/3c424c2b-bada-407e-b0f9-1de4f378784a.webp",
                "publicUrl" : "https://storage.googleapis.com/intelliinvest-operations-storage/tenant/64ba5a259aac676b1e5d0810/news/heroImage/3c424c2b-bada-407e-b0f9-1de4f378784a.webp",
                "_id" : "66399ddaa7a266d8ce43eb75",
                "createdAt" : "2024-05-07T05:31:45.216+0000",
                "updatedAt" : "2024-05-07T05:31:45.216+0000"
            }
        ],
    "icon" : [
        {
            "name" : "logo_vector.png",
            "sizeInBytes" : 145948,
            "privateUrl" : "tenant/64ba5a259aac676b1e5d0810/news/icon/08de77a4-4f1a-49e3-ad9b-7e95dee1cb6b.png",
            "publicUrl" : "https://storage.googleapis.com/intelliinvest-operations-storage/tenant/64ba5a259aac676b1e5d0810/news/icon/08de77a4-4f1a-49e3-ad9b-7e95dee1cb6b.png",
            "_id" : "6639bc9aa7a266d8ce43f2d1",
            "createdAt" : "2024-05-07T05:31:45.216+0000",
            "updatedAt" : "2024-05-07T05:31:45.216+0000"
        }
    ]

}

# API endpoint
url = "https://operations.intelliinvest.com/api/tenant/64ba5a259aac676b1e5d0810/insert-news"

# Headers (optional, depending on API requirements)
headers = {
    "Content-Type": "application/json"
}

# Send the HTTP POST request
response = requests.post(url, headers=headers, data=json.dumps({"data": data}))

# Check the response
if response.status_code == 200:
    print("Article sent successfully!")
else:
    print(f"Failed to send article. Status code: {response.status_code}")
    print("Response:", response.text)
